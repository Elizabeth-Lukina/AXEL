from telebot import types
from db.queries import set_state, get_state, clear_state, add_task, get_tasks
from ui.ui import get_main_menu

def register_task_handlers(bot):

    @bot.message_handler(func=lambda m: get_state(m.chat.id) == "awaiting_task_text")
    def save_task(message):
        chat_id = message.chat.id
        task_text = message.text.strip()
        print(f"[DEBUG] save_task called with task_text: '{task_text}'")

        if not task_text:
            bot.send_message(chat_id, "‚ö†Ô∏è –ü—É—Å—Ç–∞—è –∑–∞–¥–∞—á–∞? –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏.")
            return

        try:
            print("[DEBUG] –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –≤ –ë–î")
            add_task(chat_id, task_text)
            print("[DEBUG] –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ë–î —É—Å–ø–µ—à–Ω–æ")
            clear_state(chat_id)
            bot.send_message(chat_id, f"‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: ¬´{task_text}¬ª", reply_markup=get_main_menu())
        except Exception as e:
            print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {e}")
            bot.send_message(chat_id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏.")

    @bot.message_handler(func=lambda m: m.text == "üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏")
    def show_tasks(message):
        chat_id = message.chat.id
        clear_state(chat_id)
        tasks = get_tasks(chat_id)
        if tasks:
            text = "üóÇ *–¢–≤–æ–∏ –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*\n" + "\n".join([f"‚Ä¢ {t}" for t in tasks])
        else:
            text = "üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è."
        bot.send_message(chat_id, text, parse_mode="Markdown", reply_markup=get_main_menu())
